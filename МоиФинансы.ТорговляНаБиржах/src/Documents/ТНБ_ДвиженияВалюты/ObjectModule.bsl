#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ЗаполнитьДвижения();
			
	Движения.Записать();
	
	ПроверитьОстатки(Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Статус = Перечисления.ТНБ_СтатусыДвиженийВалюты.Новый;

КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьОстатки(Отказ)
	
	#Область ТекстЗапроса	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	ТНБ_ДвиженияВалюты.Валюта КАК Валюта,
	|	ТНБ_ДвиженияВалюты.Ссылка.МестоХранения КАК МестоХранения
	|ПОМЕСТИТЬ ВТ_Операции
	|ИЗ
	|	Документ.ТНБ_ДвиженияВалюты.Операции КАК ТНБ_ДвиженияВалюты
	|ГДЕ
	|	ТНБ_ДвиженияВалюты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТНБ_ОстаткиОстатки.Валюта КАК Валюта,
	|	ТНБ_ОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	0 КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТНБ_Остатки.Остатки(, (Валюта, МестоХранения) В
	|		(ВЫБРАТЬ
	|			ВТ_Операции.Валюта КАК Валюта,
	|			ВТ_Операции.МестоХранения КАК МестоХранения
	|		ИЗ
	|			ВТ_Операции КАК ВТ_Операции)) КАК ТНБ_ОстаткиОстатки
	|ГДЕ
	|	ТНБ_ОстаткиОстатки.ВНаличииОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТНБ_СебестоимостьВалютыОстатки.Валюта,
	|	0,
	|	ТНБ_СебестоимостьВалютыОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТНБ_СебестоимостьВалюты.Остатки(, (Валюта, МестоХранения) В
	|		(ВЫБРАТЬ
	|			ВТ_Операции.Валюта КАК Валюта,
	|			ВТ_Операции.МестоХранения КАК МестоХранения
	|		ИЗ
	|			ВТ_Операции КАК ВТ_Операции)) КАК ТНБ_СебестоимостьВалютыОстатки
	|ГДЕ
	|	ТНБ_СебестоимостьВалютыОстатки.КоличествоОстаток < 0";
	#КонецОбласти
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл                       
			Если Выборка.ВНаличииОстаток < 0 Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Не хватает остатка по валюте %1 в количестве %2",
																Выборка.Валюта,
																Выборка.ВНаличииОстаток * -1));       
			Иначе
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Не хватает остатка по себестоимости по валюте %1 в количестве %2",
																Выборка.Валюта,
																Выборка.КоличествоОстаток * -1));       
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДвижения()
	
	ДвиженияОстатки();
	ДвиженияСебестоимость();
	
КонецПроцедуры

Процедура ДвиженияОстатки()
	
	Движения.ТНБ_Остатки.БлокироватьДляИзменения = Истина;
	Движения.ТНБ_Остатки.Записывать = Истина;
	Движения.ТНБ_Остатки.Загрузить(ПолучитьТаблицуОстатков());

КонецПроцедуры

Процедура ДвиженияСебестоимость()
	
	Если Статус <> Перечисления.ТНБ_СтатусыДвиженийВалюты.Завершен Тогда
		Возврат;
	КонецЕсли;	
	
	Движения.ТНБ_СебестоимостьВалюты.БлокироватьДляИзменения = Истина;
	Движения.ТНБ_СебестоимостьВалюты.Записывать = Истина;
	Движения.ТНБ_СебестоимостьВалюты.Загрузить(ПолучитьТаблицуСебестоимости());

КонецПроцедуры

// Получить таблицу себестоимости.
// 
// Возвращаемое значение:
//  ТаблицаЗначений -  Получить таблицу себестоимости
Функция ПолучитьТаблицуСебестоимости()
		
	ТаблицаДвижения = Движения.ТНБ_СебестоимостьВалюты.ВыгрузитьКолонки();

	#Область ТекстЗапроса
	ТекстЗапроса =    
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТНБ_ДвиженияВалюты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ТНБ_ВидыОперацийДвиженийВалют.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ИСТИНА КАК Активность,
	|	ТНБ_ДвиженияВалюты.Период КАК Период,
	|	ТНБ_ДвиженияВалюты.Валюта КАК Валюта,
	|	ТНБ_ДвиженияВалюты.Ссылка.МестоХранения КАК МестоХранения,
	|	ТНБ_ДвиженияВалюты.Количество КАК Количество,
	|	ТНБ_ДвиженияВалюты.Себестоимость КАК Стоимость
	|ИЗ
	|	Документ.ТНБ_ДвиженияВалюты.Операции КАК ТНБ_ДвиженияВалюты
	|ГДЕ
	|	ТНБ_ДвиженияВалюты.Ссылка = &Ссылка";  
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗапрос = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапрос.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДвижения.Добавить(), ВыборкаЗапрос);
	КонецЦикла;
	
	Возврат ТаблицаДвижения;  
	
КонецФункции

Функция ПолучитьТаблицуОстатков()              
	
	ТаблицаДвижения = Движения.ТНБ_Остатки.ВыгрузитьКолонки();
	
	#Область ТекстЗапроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТНБ_ДвиженияВалюты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ТНБ_ВидыОперацийДвиженийВалют.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ИСТИНА КАК Активность,
	|	ТНБ_ДвиженияВалюты.Период КАК Период,
	|	ТНБ_ДвиженияВалюты.Валюта КАК Валюта,
	|	ТНБ_ДвиженияВалюты.Ссылка.МестоХранения КАК МестоХранения,
	|	ВЫБОР
	|		КОГДА ТНБ_ДвиженияВалюты.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.ТНБ_СтатусыДвиженийВалюты.Завершен)
	|			ТОГДА ТНБ_ДвиженияВалюты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТНБ_ДвиженияВалюты.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.ТНБ_СтатусыДвиженийВалюты.Завершен)
	|			ТОГДА ТНБ_ДвиженияВалюты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланРасход,
	|	0 КАК ПланПриход
	|ИЗ
	|	Документ.ТНБ_ДвиженияВалюты.Операции КАК ТНБ_ДвиженияВалюты
	|ГДЕ
	|	ТНБ_ДвиженияВалюты.Ссылка = &Ссылка";
	#КонецОбласти

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаЗапрос = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапрос.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДвижения.Добавить(), ВыборкаЗапрос);
	КонецЦикла;
				
	Возврат ТаблицаДвижения;
	
КонецФункции // ПолучитьТаблицуОстатков()

#КонецОбласти
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

