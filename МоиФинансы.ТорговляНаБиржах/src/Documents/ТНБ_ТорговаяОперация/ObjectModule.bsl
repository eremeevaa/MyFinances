#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ЗаполнитьДвижения();
			
	Движения.Записать();
	
	ПроверитьОстатки(Отказ);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ВидОперации = Перечисления.ТНБ_ВидыОперации.Торговля;

КонецПроцедуры
#КонецОбласти
#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьОстатки(Отказ)
	
	#Область ТекстЗапроса	
	ТекстЗапроса =  
	"ВЫБРАТЬ
	|	ТНБ_ТорговаяОперацияОперации.ВалютаСписания КАК ВалютаСписания,
	|	ТНБ_ТорговаяОперацияОперации.Ссылка.Отправитель КАК Отправитель
	|ПОМЕСТИТЬ ВТ_Операции
	|ИЗ
	|	Документ.ТНБ_ТорговаяОперация.Операции КАК ТНБ_ТорговаяОперацияОперации
	|ГДЕ
	|	ТНБ_ТорговаяОперацияОперации.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТНБ_ОстаткиОстатки.Валюта КАК Валюта,
	|	ТНБ_ОстаткиОстатки.ВНаличииОстаток КАК ВНаличииОстаток,
	|	0 КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТНБ_Остатки.Остатки(
	|			,
	|			(Валюта, МестоХранения) В
	|				(ВЫБРАТЬ
	|					ВТ_Операции.ВалютаСписания КАК ВалютаСписания,
	|					ВТ_Операции.Отправитель КАК Отправитель
	|				ИЗ
	|					ВТ_Операции КАК ВТ_Операции)) КАК ТНБ_ОстаткиОстатки
	|ГДЕ
	|	ТНБ_ОстаткиОстатки.ВНаличииОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТНБ_СебестоимостьВалютыОстатки.Валюта,
	|	0,
	|	ТНБ_СебестоимостьВалютыОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТНБ_СебестоимостьВалюты.Остатки(
	|			,
	|			(Валюта, МестоХранения) В
	|				(ВЫБРАТЬ
	|					ВТ_Операции.ВалютаСписания КАК ВалютаСписания,
	|					ВТ_Операции.Отправитель КАК Отправитель
	|				ИЗ
	|					ВТ_Операции КАК ВТ_Операции)) КАК ТНБ_СебестоимостьВалютыОстатки
	|ГДЕ
	|	ТНБ_СебестоимостьВалютыОстатки.КоличествоОстаток < 0";
	#КонецОбласти
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл                       
			Если Выборка.ВНаличииОстаток < 0 Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Не хватает остатка по валюте %1 в количестве %2",
																Выборка.Валюта,
																Выборка.ВНаличииОстаток * -1));       
			Иначе
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Не хватает остатка по себестоимости по валюте %1 в количестве %2",
																Выборка.Валюта,
																Выборка.КоличествоОстаток * -1));       
			КонецЕсли;
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьДвижения()
	
	ДвиженияОстатки();
	ДвиженияСебестоимость();
	
КонецПроцедуры

Процедура ДвиженияОстатки()
	
	Движения.ТНБ_Остатки.БлокироватьДляИзменения = Истина;
	Движения.ТНБ_Остатки.Записывать = Истина;
	Движения.ТНБ_Остатки.Загрузить(ПолучитьТаблицуОстатков());

КонецПроцедуры

Процедура ДвиженияСебестоимость()
	
	Если Статус <> Перечисления.ТНБ_СтатусыТорговыхОпераций.Завершен Тогда
		Возврат;	
	КонецЕсли;
	
	Движения.ТНБ_СебестоимостьВалюты.БлокироватьДляИзменения = Истина;
	Движения.ТНБ_СебестоимостьВалюты.Записывать = Истина;
	Движения.ТНБ_СебестоимостьВалюты.Загрузить(ПолучитьТаблицуСебестоимости());

КонецПроцедуры

Функция ПолучитьТаблицуСебестоимости()
	
	ТаблицаДвижения = Движения.ТНБ_СебестоимостьВалюты.ВыгрузитьКолонки();

	#Область ТекстЗапроса
	ТекстЗапроса =    
	"ВЫБРАТЬ
	|	ТНБ_ТорговаяОперацияОперации.НомерСтроки КАК НомерСтроки,
	|	выбор
	|		КОГДА ТНБ_ТорговаяОперацияОперации.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ТНБ_ВидыОперации.Торговля)
	|			ТОГДА ТНБ_ТорговаяОперацияОперации.Ссылка.МестоХранения
	|		ИНАЧЕ ТНБ_ТорговаяОперацияОперации.Ссылка.Отправитель
	|	КОНЕЦ КАК Отправитель,
	|	ТНБ_ТорговаяОперацияОперации.Ссылка.МестоХранения КАК Получатель,
	|	ТНБ_ТорговаяОперацияОперации.ВалютаСписания КАК ВалютаОтправитель,
	|	ТНБ_ТорговаяОперацияОперации.КоличествоСписания КАК КоличествоОтправитель,
	|	ТНБ_ТорговаяОперацияОперации.ВалютаПоступления КАК ВалютаПолучатель,
	|	ТНБ_ТорговаяОперацияОперации.КоличествоПоступления КАК КоличествоПолучатель
	|ПОМЕСТИТЬ ВТ_Операции
	|ИЗ
	|	Документ.ТНБ_ТорговаяОперация.Операции КАК ТНБ_ТорговаяОперацияОперации
	|ГДЕ
	|	ТНБ_ТорговаяОперацияОперации.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Операции.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТНБ_СебестоимостьВалютыОстатки.СтоимостьОстаток > 0
	|			ТОГДА ОКР(ТНБ_СебестоимостьВалютыОстатки.СтоимостьОстаток / ТНБ_СебестоимостьВалютыОстатки.КоличествоОстаток, 3)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьЗаЕдиницу
	|ПОМЕСТИТЬ ВТ_Себестоимость
	|ИЗ
	|	ВТ_Операции КАК ВТ_Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТНБ_СебестоимостьВалюты.Остатки(&Период, (Валюта, МестоХранения) В
	|			(ВЫБРАТЬ
	|				ВТ_Операции.ВалютаОтправитель КАК ВалютаОтправитель,
	|				ВТ_Операции.Отправитель КАК Отправитель
	|			ИЗ
	|				ВТ_Операции КАК ВТ_Операции)) КАК ТНБ_СебестоимостьВалютыОстатки
	|		ПО ВТ_Операции.Отправитель = ТНБ_СебестоимостьВалютыОстатки.МестоХранения
	|		И ВТ_Операции.ВалютаОтправитель = ТНБ_СебестоимостьВалютыОстатки.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВТ_Операции.ВалютаОтправитель КАК Валюта,
	|	ВТ_Операции.Отправитель КАК МестоХранения,
	|	ВТ_Операции.КоличествоОтправитель КАК Количество,
	|	ВТ_Операции.КоличествоОтправитель * ВТ_Себестоимость.СтоимостьЗаЕдиницу КАК Стоимость,
	|	ИСТИНА КАК Активность
	|ИЗ
	|	ВТ_Операции КАК ВТ_Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Себестоимость КАК ВТ_Себестоимость
	|		ПО ВТ_Операции.НомерСтроки = ВТ_Себестоимость.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ВТ_Операции.ВалютаПолучатель,
	|	ВТ_Операции.Получатель,
	|	ВТ_Операции.КоличествоПолучатель,
	|	ВТ_Операции.КоличествоОтправитель * ВТ_Себестоимость.СтоимостьЗаЕдиницу,
	|	Истина
	|ИЗ
	|	ВТ_Операции КАК ВТ_Операции
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Себестоимость КАК ВТ_Себестоимость
	|		ПО ВТ_Операции.НомерСтроки = ВТ_Себестоимость.НомерСтроки";  
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка); 
	Запрос.УстановитьПараметр("Период", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаЗапрос = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапрос.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДвижения.Добавить(), ВыборкаЗапрос);
	КонецЦикла;
	
	Возврат ТаблицаДвижения;  
	
КонецФункции

Функция ПолучитьТаблицуОстатков()              
	
	ТаблицаДвижения = Движения.ТНБ_Остатки.ВыгрузитьКолонки();
	
	#Область ТекстЗапроса
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТНБ_ТорговаяОперацияОперации.Ссылка.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТНБ_ТорговаяОперацияОперации.ВалютаСписания КАК Валюта,
	|	&МестоХраненияОтправитель КАК МестоХранения,
	|	ВЫБОР
	|		КОГДА ТНБ_ТорговаяОперацияОперации.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.ТНБ_СтатусыТорговыхОпераций.Завершен)
	|			ТОГДА ТНБ_ТорговаяОперацияОперации.КоличествоСписания
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТНБ_ТорговаяОперацияОперации.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.ТНБ_СтатусыТорговыхОпераций.Завершен)
	|			ТОГДА ТНБ_ТорговаяОперацияОперации.КоличествоСписания
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланРасход,
	|	0 КАК ПланПриход,
	|	ИСТИНА КАК Активность
	|ИЗ
	|	Документ.ТНБ_ТорговаяОперация.Операции КАК ТНБ_ТорговаяОперацияОперации
	|ГДЕ
	|	ТНБ_ТорговаяОперацияОперации.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТНБ_ТорговаяОперацияОперации.Ссылка.Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТНБ_ТорговаяОперацияОперации.ВалютаПоступления,
	|	ТНБ_ТорговаяОперацияОперации.Ссылка.МестоХранения,
	|	ВЫБОР
	|		КОГДА ТНБ_ТорговаяОперацияОперации.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.ТНБ_СтатусыТорговыхОпераций.Завершен)
	|			ТОГДА ТНБ_ТорговаяОперацияОперации.КоличествоПоступления
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА ТНБ_ТорговаяОперацияОперации.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.ТНБ_СтатусыТорговыхОпераций.Завершен)
	|			ТОГДА ТНБ_ТорговаяОперацияОперации.КоличествоПоступления
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	Документ.ТНБ_ТорговаяОперация.Операции КАК ТНБ_ТорговаяОперацияОперации
	|ГДЕ
	|	ТНБ_ТорговаяОперацияОперации.Ссылка = &Ссылка";
	#КонецОбласти
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МестоХраненияОтправитель", МестоХраненияОтправитель());
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаЗапрос = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапрос.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДвижения.Добавить(), ВыборкаЗапрос);
	КонецЦикла;
				
	Возврат ТаблицаДвижения;
	
КонецФункции

Функция МестоХраненияОтправитель()
	
	Результат = МестоХранения;	

	Если ВидОперации = Перечисления.ТНБ_ВидыОперации.Перемещение Тогда
		Результат = Отправитель;
	КонецЕсли;	

	Возврат Результат;

КонецФункции // ПолучитьТаблицуОстатков()

#КонецОбласти
#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли

